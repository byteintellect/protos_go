// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: core_v1/core_v1.proto

package core_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Gender int32

const (
	Gender_GENDER_INVALID Gender = 0
	Gender_GENDER_MALE    Gender = 1
	Gender_GENDER_FEMALE  Gender = 2
	Gender_GENDER_OTHER   Gender = 3
)

// Enum value maps for Gender.
var (
	Gender_name = map[int32]string{
		0: "GENDER_INVALID",
		1: "GENDER_MALE",
		2: "GENDER_FEMALE",
		3: "GENDER_OTHER",
	}
	Gender_value = map[string]int32{
		"GENDER_INVALID": 0,
		"GENDER_MALE":    1,
		"GENDER_FEMALE":  2,
		"GENDER_OTHER":   3,
	}
)

func (x Gender) Enum() *Gender {
	p := new(Gender)
	*p = x
	return p
}

func (x Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_core_v1_proto_enumTypes[0].Descriptor()
}

func (Gender) Type() protoreflect.EnumType {
	return &file_core_v1_core_v1_proto_enumTypes[0]
}

func (x Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gender.Descriptor instead.
func (Gender) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_core_v1_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_STATUS_INVALID  Status = 0
	Status_STATUS_ACTIVE   Status = 1
	Status_STATUS_INACTIVE Status = 2
	Status_STATUS_BLOCKED  Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_INVALID",
		1: "STATUS_ACTIVE",
		2: "STATUS_INACTIVE",
		3: "STATUS_BLOCKED",
	}
	Status_value = map[string]int32{
		"STATUS_INVALID":  0,
		"STATUS_ACTIVE":   1,
		"STATUS_INACTIVE": 2,
		"STATUS_BLOCKED":  3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_core_v1_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_core_v1_core_v1_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_core_v1_proto_rawDescGZIP(), []int{1}
}

type Relation int32

const (
	Relation_RELATION_INVALID Relation = 0
	Relation_RELATION_MOTHER  Relation = 1
	Relation_RELATION_FATHER  Relation = 2
	Relation_RELATION_WIFE    Relation = 3
	Relation_RELATION_HUSBAND Relation = 4
	Relation_RELATION_BROTHER Relation = 5
	Relation_RELATION_SISTER  Relation = 6
	Relation_RELATION_PRIMARY Relation = 7
)

// Enum value maps for Relation.
var (
	Relation_name = map[int32]string{
		0: "RELATION_INVALID",
		1: "RELATION_MOTHER",
		2: "RELATION_FATHER",
		3: "RELATION_WIFE",
		4: "RELATION_HUSBAND",
		5: "RELATION_BROTHER",
		6: "RELATION_SISTER",
		7: "RELATION_PRIMARY",
	}
	Relation_value = map[string]int32{
		"RELATION_INVALID": 0,
		"RELATION_MOTHER":  1,
		"RELATION_FATHER":  2,
		"RELATION_WIFE":    3,
		"RELATION_HUSBAND": 4,
		"RELATION_BROTHER": 5,
		"RELATION_SISTER":  6,
		"RELATION_PRIMARY": 7,
	}
)

func (x Relation) Enum() *Relation {
	p := new(Relation)
	*p = x
	return p
}

func (x Relation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Relation) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_core_v1_proto_enumTypes[2].Descriptor()
}

func (Relation) Type() protoreflect.EnumType {
	return &file_core_v1_core_v1_proto_enumTypes[2]
}

func (x Relation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Relation.Descriptor instead.
func (Relation) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_core_v1_proto_rawDescGZIP(), []int{2}
}

type IdentityType int32

const (
	IdentityType_IDENTITY_TYPE_INVALID  IdentityType = 0
	IdentityType_IDENTITY_TYPE_AADHAAR  IdentityType = 1
	IdentityType_IDENTITY_TYPE_PHONE    IdentityType = 2
	IdentityType_IDENTITY_TYPE_EMAIL    IdentityType = 3
	IdentityType_IDENTITY_TYPE_PASSPORT IdentityType = 4
	IdentityType_IDENTITY_TYPE_PAN      IdentityType = 5
)

// Enum value maps for IdentityType.
var (
	IdentityType_name = map[int32]string{
		0: "IDENTITY_TYPE_INVALID",
		1: "IDENTITY_TYPE_AADHAAR",
		2: "IDENTITY_TYPE_PHONE",
		3: "IDENTITY_TYPE_EMAIL",
		4: "IDENTITY_TYPE_PASSPORT",
		5: "IDENTITY_TYPE_PAN",
	}
	IdentityType_value = map[string]int32{
		"IDENTITY_TYPE_INVALID":  0,
		"IDENTITY_TYPE_AADHAAR":  1,
		"IDENTITY_TYPE_PHONE":    2,
		"IDENTITY_TYPE_EMAIL":    3,
		"IDENTITY_TYPE_PASSPORT": 4,
		"IDENTITY_TYPE_PAN":      5,
	}
)

func (x IdentityType) Enum() *IdentityType {
	p := new(IdentityType)
	*p = x
	return p
}

func (x IdentityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdentityType) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_core_v1_proto_enumTypes[3].Descriptor()
}

func (IdentityType) Type() protoreflect.EnumType {
	return &file_core_v1_core_v1_proto_enumTypes[3]
}

func (x IdentityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdentityType.Descriptor instead.
func (IdentityType) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_core_v1_proto_rawDescGZIP(), []int{3}
}

type VerificationStatus int32

const (
	VerificationStatus_VERIFICATION_STATUS_INVALID    VerificationStatus = 0
	VerificationStatus_VERIFICATION_STATUS_VERIFIED   VerificationStatus = 1
	VerificationStatus_VERIFICATION_STATUS_UNVERIFIED VerificationStatus = 2
	VerificationStatus_VERIFICATION_STATUS_REJECTED   VerificationStatus = 3
)

// Enum value maps for VerificationStatus.
var (
	VerificationStatus_name = map[int32]string{
		0: "VERIFICATION_STATUS_INVALID",
		1: "VERIFICATION_STATUS_VERIFIED",
		2: "VERIFICATION_STATUS_UNVERIFIED",
		3: "VERIFICATION_STATUS_REJECTED",
	}
	VerificationStatus_value = map[string]int32{
		"VERIFICATION_STATUS_INVALID":    0,
		"VERIFICATION_STATUS_VERIFIED":   1,
		"VERIFICATION_STATUS_UNVERIFIED": 2,
		"VERIFICATION_STATUS_REJECTED":   3,
	}
)

func (x VerificationStatus) Enum() *VerificationStatus {
	p := new(VerificationStatus)
	*p = x
	return p
}

func (x VerificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_core_v1_proto_enumTypes[4].Descriptor()
}

func (VerificationStatus) Type() protoreflect.EnumType {
	return &file_core_v1_core_v1_proto_enumTypes[4]
}

func (x VerificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerificationStatus.Descriptor instead.
func (VerificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_core_v1_proto_rawDescGZIP(), []int{4}
}

var File_core_v1_core_v1_proto protoreflect.FileDescriptor

var file_core_v1_core_v1_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31,
	0x2a, 0x52, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45,
	0x4e, 0x44, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45,
	0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x4f, 0x54, 0x48,
	0x45, 0x52, 0x10, 0x03, 0x2a, 0x58, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xb4,
	0x01, 0x0a, 0x08, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f,
	0x54, 0x48, 0x45, 0x52, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x54, 0x48, 0x45, 0x52, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x52,
	0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x49, 0x46, 0x45, 0x10, 0x03, 0x12, 0x14,
	0x0a, 0x10, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x55, 0x53, 0x42, 0x41,
	0x4e, 0x44, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x42, 0x52, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x45,
	0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x49, 0x53, 0x54, 0x45, 0x52, 0x10, 0x06, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x49, 0x4d,
	0x41, 0x52, 0x59, 0x10, 0x07, 0x2a, 0xa9, 0x01, 0x0a, 0x0c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49,
	0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x41, 0x44, 0x48, 0x41, 0x41, 0x52, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x48,
	0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x03, 0x12, 0x1a,
	0x0a, 0x16, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x44,
	0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x4e, 0x10,
	0x05, 0x2a, 0x9d, 0x01, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x56, 0x45, 0x52,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x56,
	0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x20, 0x0a, 0x1c, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x03, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x79, 0x74, 0x65, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x5f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x3b,
	0x63, 0x6f, 0x72, 0x65, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_v1_core_v1_proto_rawDescOnce sync.Once
	file_core_v1_core_v1_proto_rawDescData = file_core_v1_core_v1_proto_rawDesc
)

func file_core_v1_core_v1_proto_rawDescGZIP() []byte {
	file_core_v1_core_v1_proto_rawDescOnce.Do(func() {
		file_core_v1_core_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_v1_core_v1_proto_rawDescData)
	})
	return file_core_v1_core_v1_proto_rawDescData
}

var file_core_v1_core_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_core_v1_core_v1_proto_goTypes = []interface{}{
	(Gender)(0),             // 0: core_v1.Gender
	(Status)(0),             // 1: core_v1.Status
	(Relation)(0),           // 2: core_v1.Relation
	(IdentityType)(0),       // 3: core_v1.IdentityType
	(VerificationStatus)(0), // 4: core_v1.VerificationStatus
}
var file_core_v1_core_v1_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_core_v1_core_v1_proto_init() }
func file_core_v1_core_v1_proto_init() {
	if File_core_v1_core_v1_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_v1_core_v1_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_v1_core_v1_proto_goTypes,
		DependencyIndexes: file_core_v1_core_v1_proto_depIdxs,
		EnumInfos:         file_core_v1_core_v1_proto_enumTypes,
	}.Build()
	File_core_v1_core_v1_proto = out.File
	file_core_v1_core_v1_proto_rawDesc = nil
	file_core_v1_core_v1_proto_goTypes = nil
	file_core_v1_core_v1_proto_depIdxs = nil
}
